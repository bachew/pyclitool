#!/bin/bash

set -e

BOOTSTRAP_DIR=$(dirname $(readlink -e "$0"))
BASE_DIR=$(dirname "$BOOTSTRAP_DIR")
TMP_DIR="$BASE_DIR/tmp"
ENV_DIR="$BASE_DIR/env"

MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
MINICONDA_DIR="$ENV_DIR/miniconda"
MINICONDA_PYTHON_VERSION='3\.7\..*'

VENV_DIR="$ENV_DIR/venv"

main() {
    mkdir -p "$ENV_DIR"
    mkdir -p "$TMP_DIR"

    if newer "$BOOTSTRAP_DIR/update-sys" "$ENV_DIR/update-sys-done"; then
        echo "System outdated"
        rm -rf "$MINICONDA_DIR"
        update "$BOOTSTRAP_DIR/update-sys" "$ENV_DIR/update-sys-done"
    fi

    export PATH="$BASE_DIR/bin:$VENV_DIR/bin:$MINICONDA_DIR/bin:$PATH"

    MINICONDA_UPDATED="0"

    if [ -e "$MINICONDA_DIR/bin/python" ]; then
        PY_VER=$("$MINICONDA_DIR/bin/python" --version)
        PY_VER_OK=$(echo "$PY_VER" | grep -cE "$MINICONDA_PYTHON_VERSION")

        if [ $PY_VER_OK = "0" ]; then
            echo "Miniconda is outdated ($PY_VER, but wanted /$MINICONDA_PYTHON_VERSION/)"
            install_miniconda -u
            MINICONDA_UPDATED="1"
        fi
    else
        install_miniconda
        MINICONDA_UPDATED="1"
    fi

    if newer "$BOOTSTRAP_DIR/update-conda" "$MINICONDA_DIR/update-conda-done"; then
        update "$BOOTSTRAP_DIR/update-conda" "$MINICONDA_DIR/update-conda-done"
        MINICONDA_UPDATED="1"
    fi

    # Following best practices of using pip with conda:
    #   https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#using-pip-in-an-environment
    # Except that python venv module is used instead of conda to create virtual
    # environment, this is because a conda virtual environment doesn't have its
    # own bin/python
    if [ "$MINICONDA_UPDATED" = "1" ]; then
        rm -rf "$VENV_DIR"
    fi

    UPDATE_VENV="0"

    if newer "$BOOTSTRAP_DIR/update-venv" "$VENV_DIR/update-venv-done"; then
        echo "Virtual environment outdated"
        rm -rf "$VENV_DIR"
    fi

    if [ ! -e "$VENV_DIR/bin/python" ]; then
        echo "Creating virtual environment"
        "$MINICONDA_DIR/bin/python" -m venv --system-site-packages "$VENV_DIR"
        UPDATE_VENV="1"
    fi

    if [ "$UPDATE_VENV" = "1" ]; then
        update "$BOOTSTRAP_DIR/update-venv" "$VENV_DIR/update-venv-done"
    fi

    source "$BASE_DIR/env.sh"
    source_opt "$TMP_DIR/env.sh"

    if [ -z "$PYCLITOOL_VENV_NAME" ]; then
        export PYCLITOOL_VENV_NAME=$(basename "$BASE_DIR")
    fi

    export PYCLITOOL_INITIALIZED="1"

    "$@"
}

newer () {
    if [ ! -f "$2" ]; then
        return 0
    fi

    if [ "$1" -nt "$2" ]; then
        return 0
    fi
    return 1
}

update() {
    echo "Running $(basename $1)"
    "$1"
    cp -f "$1" "$2"
}

install_miniconda() {
    local INSTALLER="$TMP_DIR/miniconda-installer"

    echo "Downloading $MINICONDA_URL"
    curl -s "$MINICONDA_URL" > "$INSTALLER"
    bash "$INSTALLER" -b -p "$MINICONDA_DIR" "$@"
}

source_opt() {
    if [ -e "$1" ]; then
        echo "Sourcing $1"
        source "$1"
    fi
}

main "$@"
